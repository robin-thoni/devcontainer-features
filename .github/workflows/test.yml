name: "Tests"
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  validate:
    name: Validate devcontainer-feature.json files
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      features: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4

      - uses: devcontainers/action@v1
        with:
          validate-only: "true"
          base-path-to-features: "./src"

      - name: Find features
        id: find
        shell: bash
        working-directory: src
        run: |
          set -x
          set -e
          set -o pipefail

          features="$(find . -name "devcontainer-feature.json" | sed 's|^\./\([^/]*\)/devcontainer-feature.json$|\1|')"
          {
            echo "features-filter<<EOF"
            echo "none: ./**"
            for feature in ${features}; do
              echo "${feature}: ./**/${feature}/**"
            done
            echo "EOF"
          } > $GITHUB_OUTPUT

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          # Note that the flexai-utils feature is also used to test changes to
          # the present workflow.
          filters: ${{ steps.find.outputs.features-filter }}

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    needs: validate
    permissions:
      contents: read
      packages: read
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJSON(needs.validate.outputs.features) }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ matrix.features != 'none' }}

      - name: Install latest devcontainer CLI
        if: ${{ matrix.features != 'none' }}
        run: |
          npm install -g @devcontainers/cli

      - name: Generating tests for '${{ matrix.features }}'
        if: ${{ matrix.features != 'none' }}
        run: |
          devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i mcr.microsoft.com/devcontainers/base:noble

  # This job is used as a reference in repo settings to make the checks in this
  # workflow required without having to add every single variant of the `test`
  # job manually.
  complete-test:
    name: Complete feature tests
    if: always() && !failure() && !cancelled()
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - run: |
          exit 0
